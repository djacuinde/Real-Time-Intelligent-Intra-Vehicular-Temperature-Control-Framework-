//**** COCO dataset (Linux)*****//
 

#Get COCO dataset "train2014.zip"
:~Code/darknet $ cp scripts/get_coco_dataset.sh data
:~Code/darknet $ cd data
:~Code/darknet/data $ bash get_coco_dataset.sh

#Modify cfg/coco.data file 
 1 classes= 80
 2 train  = <path-to-coco>/trainvalno5k.txt
 3 valid  = <path-to-coco>/5k.txt
 4 names = data/coco.names
 5 backup = backup
 
 #Modify cfg/<yolo model>.cfg file 
 [net]
  # Testing
  # batch=1
  # subdivisions=1
  # Training
  batch=64
  subdivisions=8
  ....
  
  
  
  
  
//**** Custom dataset (Windows) *****//

Link: https://github.com/theAIGuysCode/OIDv4_ToolKit

:~Code/  $ git clone https://github.com/theAIGuysCode/OIDv4_ToolKit.git
:~Code/  $ cd OIDv4_ToolKit

:~Code/OIDv4_ToolKit  $ pip3 install -r requirements.txt     
 #Run with python3 if failed for pip
 
# Will use Open Images Dataset to download custom dataset
# https://storage.googleapis.com/openimages/web/visualizer/index.html?set=train&type=detection&c=%2Fm%2F0bt9lr 

:~Code/OIDv4_ToolKit  $ python main.py downloader --classes <Class Names > --type_csv train --limit <# of images to download per class>
e.g. :~Code/OIDv4_ToolKit  $ python main.py downloader --classes Person Dog Cat --type_csv train --limit 1
     # Downloads (--limit #) of images for classes Person, Dog, and Cat
# Select YES for class-descriptions-boxable.csv and train-annotations-bbox.csv files 

#OIDv4 Toolkit will give the label in format : <Class> <Xmin> <Ymin> <Xmax> <Ymax>
#YOLO takes in <Class> <Xmin> <Xmax> <Ymin> <Ymax>, which can be done by:
  
  1) In OIDv4_Toolkit, search and open "classes.txt" 
     #Replace text with the class name of the downloaded data
        #e.g. Downloaded Person, Dog, and Cat classes
        # so, in the .txt, it contains the contents (single class per line):  
              Person
              Dog
              Cat 
   2) run command :~Code/OIDv4_ToolKit $ python convert_annotations.py 
      #We convert labels format to YOLO format
                                   
  
  
  
  
  
//**** Training *****//
  #Download the convolutional weights
  https://github.com/AlexeyAB/darknet/blob/57e878b4f9512cf9995ff6b5cd6e0d7dc1da9eaf/build/darknet/x64/partial.cmd#L24 
  or by https://pjreddie.com/darknet/yolo/
  
#Train 
./darknet detector train cfg/<dataset>.data cfg/<yolo model>.cfg <conv weights> 
e.g.  :~Code/darknet $ ./darknet detector train cfg/coco.data cfg/yolov3.cfg yolov3-tiny.conv.15

#Stop or Restart Training from checkpoint
./darknet detector train cfg/coco.data cfg/yolov3.cfg backup/yolov3.backup
